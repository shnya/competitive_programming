#!/usr/bin/env python3
import sys


def solve(S: "List[str]"):
    cs = -1
    ce = len(S[0])
    rs = -1
    re = len(S)
    for i in range(len(S)):
        for j in range(len(S[0])):
            if S[i][j] == "#" and cs == -1 and rs == -1:
                cs = j
                rs = i
                break
    for j in range(cs, len(S[0])):
        if S[rs][j] == ".":
            ce = j
            break
    for i in range(rs, len(S)):
        if S[i][cs] == ".":
            re = i
            break
    print(rs + 1, re)
    print(cs + 1, ce)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = [next(tokens) for _ in range(10)]  # type: "List[str]"
    solve(S)

if __name__ == '__main__':
    main()
