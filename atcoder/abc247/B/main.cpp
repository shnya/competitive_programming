#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;

const string YES = "Yes";
const string NO = "No";

void solve(long long N, std::vector<std::string> s, std::vector<std::string> t){
    map<string, long long> m;
    for(auto ss : s) {
        m[ss] = m[ss] + 1;
    }
    for(auto tt: t) {
        m[tt] = m[tt] + 1;
    }
    for(size_t i = 0; i < s.size(); i++) {
        if(s[i] == t[i] && m[s[i]] == 2) {
            continue;
        }else if(m[s[i]] > 1 && m[t[i]] > 1){
            cout << NO << endl;
            return;
        }
    }

    cout << YES << endl;
 }

// Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    std::scanf("%lld", &N);
    std::vector<std::string> s(N);
    std::vector<std::string> t(N);
    for(int i = 0 ; i < N ; i++){
        std::cin >> s[i];
        std::cin >> t[i];
    }
    solve(N, std::move(s), std::move(t));
    return 0;
}
